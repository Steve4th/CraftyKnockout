<h2>Observables III - ObservableArray</h2>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Crafty Coders Hall of Fame</h3>
                <p>There are <span data-bind="text: FamousCoders().length"></span> entries to the hall.</p>
                <div class="rightalign">
                    <button type="button" class="btn btn-default" data-bind="click: AddCoder">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                    <button type="button" class="btn btn-default" data-bind="click: SortCoders">
                        <span class="glyphicon glyphicon-sort"></span>
                    </button>
                </div>
            </div>

            <div class="panel-body">

                <div class="list-group" data-bind="foreach: FamousCoders">

                    <!-- note the use of multiple bindings. The CSS binding allows the application of css class. The style binding could have been used. -->
                    <a href="#" class="list-group-item" data-bind="click: $root.EditCoder, css:{ 'active': isSelected }">

                        <span class="badge" data-bind="text: fameScore"></span>
                        <h4 class="list-group-item-heading" data-bind="text: coderName"></h4>
                        <p class="list-group-item-text" data-bind="text:famousFor"></p>

                        <p class="text-info">
                            <i>ko $index:<span data-bind="text:$index"></span></i><br />
                            <i>isSelected:<span data-bind="text: isSelected"></span></i>
                        </p>

                        <div class="rightalign">
                            <!-- NB. Use the $root to get to the root of the view model, without it the template will think the method is on the current record-->
                            <div class="btn btn-sm" data-bind="click: $root.RemoveCoder">
                                <span class="glyphicon glyphicon-trash right"></span>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div>
            <div class="panel panel-primary" data-bind="with: EditableRecord ">

                <div class="panel-heading">
                    <h3 class="panel-title">Editing <span data-bind="text: coderName"></span></h3>
                </div>

                <div class="panel-body">

                    Coder Name
                    <div class="input-group">
                        <input class="form-control" data-bind="value: coderName" />
                    </div>

                    Score:
                    <div class="input-group">
                        <input class="form-control rightalign" data-bind="value: fameScore" type="number" />
                    </div>

                    Famous For:
                    <div class="input-group">
                        <textarea class="form-control" data-bind="value: famousFor"></textarea>
                    </div>

                </div>
            </div>
        </div>
    </div>


    <div class="col-md-2">

    </div>
</div>

<div class="notes">
    An observableArray tracks which objects are in the array, not the state of those objects!
</div>

@section Scripts {
    <script src="~/Scripts/knockout-3.0.0.js"></script>
    <script src="~/Scripts/GettingStarted/ObservableArray.js"></script>
}
