<h2>Observables III - ObservableArray</h2>



<div class="row">
    <div class="col-md-4">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Crafty Coders Hall of Fame</h3>
                <div class="rightalign">
                    <button type="button" class="btn btn-default" data-bind="click: AddCoder">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                    <button type="button" class="btn btn-default" data-bind="click: SortCoders">
                        <span class="glyphicon glyphicon-sort"></span>
                    </button>
                </div>
            </div>

            <div class="panel-body">

                <ul class="list-group" data-bind="template: { name: 'coderrowtemplate', foreach: FamousCoders }"></ul>

                <!-- Knockout Template -->
                <script type="text/html" id="coderrowtemplate">
                    <!-- the CSS binding provides the ability to determine css classes based on the view model-->
                    <a href="#" data-bind="css: {'list-group-item': true, active: currentRecord }, click: $root.EditCoder">

                        <span class="badge" data-bind="text: score"></span>
                        <h4 class="list-group-item-heading" data-bind="text: coderName"></h4>
                        <p class="list-group-item-text" data-bind="text:famousFor"></p>
                        <div class="rightalign">
                            <!-- NB. Use the $root to get to the root of the view model, without it the template will think the method is on the current record-->
                            <button type="button" class="btn btn-sm" data-bind="click: $root.RemoveCoder">
                                <span class="glyphicon glyphicon-trash right"></span>
                            </button>
                            @*<button type="button" class="btn btn-sm" data-bind="click: $root.EditCoder">
                                    <span class="glyphicon glyphicon-book"></span>
                                </button>*@
                        </div>
                    </a>
                </script>

            </div>
        </div>
    </div>






    <div class="col-md-4">
        <div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Editing <span data-bind="text: currentRecord.coderName"></span></h3>
                </div>

                <div class="panel-body">

                    <ul class="list-group" data-bind="template: { name: 'coderedittemplate', data: currentRecord }"></ul>

                    <script type="text/html" id="coderedittemplate">
                        Coder Name
                        <div class="input-group">
                            <input class="form-control" data-bind="value: coderName" />
                        </div>

                        Score:
                        <div class="input-group">
                            <input class="form-control rightalign" data-bind="value: score" />
                        </div>

                        Famous For:
                        <div class="input-group">
                            <input class="form-control" data-bind="value: famousFor" />
                        </div>

                        Last Presentation Date:
                        <div class="input-group">
                            <input class="form-control" data-bind="value: presentationDate" />
                        </div>
                    </script>
                </div>
            </div>
        </div>
    </div>


    <div class="col-md-4">
        <div class="notes">
            notes on observable arrays and templating
            An observableArray tracks which objects are in the array, not the state of those objects!
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/knockout-3.0.0.js"></script>
    <script src="~/Scripts/GettingStarted/ObservableArray.js"></script>
}
