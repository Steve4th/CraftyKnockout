@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>


<h2>Pros</h2>
<ul>
    <li>Focused specific scope. it does not try to do it all</li>
    <li>plays nicely with other JS frameworks as it is agnositc to them.</li>
    <li>familier binding pattern</li>
    <li>MIT licence</li>
    <li>Visual Studio and typescript intellisence</li>
    <li>Support for all browsers (well all that you might care about anyway)</li>
    <li>
        Ther is lots of help out there. The knockout documentation is really quite good, where that stops stack overflow takes over.
        See the @Html.ActionLink("resources", "Resources", "GettingStarted") page for a sample of what is out there.
    </li>
</ul>

<h2>Cons</h2>
<ul>
    <li>Litters HTML with data-bind attributes. Hardly unobstrustive</li>
    <li>own templating syntax (but could use others)</li>
    <li>You end up with some duplication of you models in JS and MVC.</li>
    <li>This is not a full SPA framework, if that is what you are after look elsewhere.</li>
</ul>

<h2>Alternatives?</h2>
<h3>Knockout vs VanilliaJS</h3>

<h3>Knockout vs AngluarJS</h3>
<ul>
    <li>
        <a href="http://blog.nebithi.com/knockoutjs-vs-angularjs/"></a>
    </li>
</ul>

<h3>Knockout vs BackboneJS</h3>
<ul>
    <li><a href="http://stackoverflow.com/questions/10320074/why-does-knockout-js-have-a-reputation-for-being-better-for-small-projects-back?lq=1">Why does Knockout have a reputation for being better for small projects?</a></li>
    <li><a href="http://stackoverflow.com/questions/12955337/angular-js-backbone-js-and-other-mv-patterned-js-libraries?rq=1">Angular, Backbone and other MV* pattern libraries</a></li>
</ul>