@model CraftyKnockoutMvc.Models.KnockoutIslandModel
@{
    ViewBag.Title = "KnockoutIsland";
}

<h2>A Knockout Island</h2>
<p>
    The idea behind KNockout Islands is that you require the power of knockout to handle a collection in only part of your view.
    In this example we are assuming that you need to handle a collection of items within an existing MVC view.
</p>

@using (Html.BeginForm())
{
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">Plan your event, enter details and click Save.</h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Event.EventName)
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Event.EventName, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Event.Location)
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Event.Location, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Event.DateOfEvent)
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Event.DateOfEvent, new { @class = "form-control", type="date" })
                </div>
            </div>

        </div>
    </div>
    <button type="button" class="btn btn-default" onclick="$('form').submit()">
        <span class="glyphicon glyphicon-floppy-disk"></span>
        Save Event
    </button>
}


@section Scripts {
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/Scripts/IntegrationWithMvc/EditHallOfFame.js")
}
